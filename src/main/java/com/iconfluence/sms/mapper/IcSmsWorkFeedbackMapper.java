package com.iconfluence.sms.mapper;

import com.iconfluence.sms.model.IcSmsWorkFeedback;
import com.iconfluence.sms.model.IcSmsWorkFeedbackExample;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface IcSmsWorkFeedbackMapper extends BaseMapper<IcSmsWorkFeedback, IcSmsWorkFeedbackExample> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_work_feedback
     *
     * @mbg.generated
     */
    @SelectProvider(type=IcSmsWorkFeedbackSqlProvider.class, method="countByExample")
    long countByExample(IcSmsWorkFeedbackExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_work_feedback
     *
     * @mbg.generated
     */
    @DeleteProvider(type=IcSmsWorkFeedbackSqlProvider.class, method="deleteByExample")
    int deleteByExample(IcSmsWorkFeedbackExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_work_feedback
     *
     * @mbg.generated
     */
    @Delete({
        "delete from ic_sms_work_feedback",
        "where gid = #{gid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String gid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_work_feedback
     *
     * @mbg.generated
     */
    @Insert({
        "insert into ic_sms_work_feedback (gid, theme, ",
        "update_time, uid, ",
        "work_time, type, ",
        "message)",
        "values (#{gid,jdbcType=VARCHAR}, #{theme,jdbcType=VARCHAR}, ",
        "#{updateTime,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR}, ",
        "#{workTime,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, ",
        "#{message,jdbcType=VARCHAR})"
    })
    int insert(IcSmsWorkFeedback record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_work_feedback
     *
     * @mbg.generated
     */
    @InsertProvider(type=IcSmsWorkFeedbackSqlProvider.class, method="insertSelective")
    int insertSelective(IcSmsWorkFeedback record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_work_feedback
     *
     * @mbg.generated
     */
    @SelectProvider(type=IcSmsWorkFeedbackSqlProvider.class, method="selectByExample")
    @ConstructorArgs({
        @Arg(column="gid", javaType=String.class, jdbcType=JdbcType.VARCHAR, id=true),
        @Arg(column="theme", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="update_time", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="uid", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="work_time", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="type", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="message", javaType=String.class, jdbcType=JdbcType.VARCHAR)
    })
    List<IcSmsWorkFeedback> selectByExample(IcSmsWorkFeedbackExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_work_feedback
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "gid, theme, update_time, uid, work_time, type, message",
        "from ic_sms_work_feedback",
        "where gid = #{gid,jdbcType=VARCHAR}"
    })
    @ConstructorArgs({
        @Arg(column="gid", javaType=String.class, jdbcType=JdbcType.VARCHAR, id=true),
        @Arg(column="theme", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="update_time", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="uid", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="work_time", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="type", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="message", javaType=String.class, jdbcType=JdbcType.VARCHAR)
    })
    IcSmsWorkFeedback selectByPrimaryKey(String gid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_work_feedback
     *
     * @mbg.generated
     */
    @UpdateProvider(type=IcSmsWorkFeedbackSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") IcSmsWorkFeedback record, @Param("example") IcSmsWorkFeedbackExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_work_feedback
     *
     * @mbg.generated
     */
    @UpdateProvider(type=IcSmsWorkFeedbackSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") IcSmsWorkFeedback record, @Param("example") IcSmsWorkFeedbackExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_work_feedback
     *
     * @mbg.generated
     */
    @UpdateProvider(type=IcSmsWorkFeedbackSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(IcSmsWorkFeedback record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_work_feedback
     *
     * @mbg.generated
     */
    @Update({
        "update ic_sms_work_feedback",
        "set theme = #{theme,jdbcType=VARCHAR},",
          "update_time = #{updateTime,jdbcType=VARCHAR},",
          "uid = #{uid,jdbcType=VARCHAR},",
          "work_time = #{workTime,jdbcType=VARCHAR},",
          "type = #{type,jdbcType=VARCHAR},",
          "message = #{message,jdbcType=VARCHAR}",
        "where gid = #{gid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(IcSmsWorkFeedback record);
}