package com.iconfluence.sms.mapper;

import com.iconfluence.sms.model.IcSmsMeeting;
import com.iconfluence.sms.model.IcSmsMeetingExample;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface IcSmsMeetingMapper extends BaseMapper<IcSmsMeeting, IcSmsMeetingExample> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_meeting
     *
     * @mbg.generated
     */
    @SelectProvider(type=IcSmsMeetingSqlProvider.class, method="countByExample")
    long countByExample(IcSmsMeetingExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_meeting
     *
     * @mbg.generated
     */
    @DeleteProvider(type=IcSmsMeetingSqlProvider.class, method="deleteByExample")
    int deleteByExample(IcSmsMeetingExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_meeting
     *
     * @mbg.generated
     */
    @Delete({
        "delete from ic_sms_meeting",
        "where gid = #{gid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String gid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_meeting
     *
     * @mbg.generated
     */
    @Insert({
        "insert into ic_sms_meeting (gid, year, ",
        "meeting_time, provience, ",
        "city, theme, c_user, ",
        "hl_user, objective, ",
        "remark)",
        "values (#{gid,jdbcType=VARCHAR}, #{year,jdbcType=VARCHAR}, ",
        "#{meetingTime,jdbcType=VARCHAR}, #{provience,jdbcType=VARCHAR}, ",
        "#{city,jdbcType=VARCHAR}, #{theme,jdbcType=VARCHAR}, #{cUser,jdbcType=VARCHAR}, ",
        "#{hlUser,jdbcType=VARCHAR}, #{objective,jdbcType=VARCHAR}, ",
        "#{remark,jdbcType=VARCHAR})"
    })
    int insert(IcSmsMeeting record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_meeting
     *
     * @mbg.generated
     */
    @InsertProvider(type=IcSmsMeetingSqlProvider.class, method="insertSelective")
    int insertSelective(IcSmsMeeting record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_meeting
     *
     * @mbg.generated
     */
    @SelectProvider(type=IcSmsMeetingSqlProvider.class, method="selectByExample")
    @ConstructorArgs({
        @Arg(column="gid", javaType=String.class, jdbcType=JdbcType.VARCHAR, id=true),
        @Arg(column="year", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="meeting_time", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="provience", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="city", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="theme", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="c_user", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="hl_user", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="objective", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="remark", javaType=String.class, jdbcType=JdbcType.VARCHAR)
    })
    List<IcSmsMeeting> selectByExample(IcSmsMeetingExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_meeting
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "gid, year, meeting_time, provience, city, theme, c_user, hl_user, objective, ",
        "remark",
        "from ic_sms_meeting",
        "where gid = #{gid,jdbcType=VARCHAR}"
    })
    @ConstructorArgs({
        @Arg(column="gid", javaType=String.class, jdbcType=JdbcType.VARCHAR, id=true),
        @Arg(column="year", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="meeting_time", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="provience", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="city", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="theme", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="c_user", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="hl_user", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="objective", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="remark", javaType=String.class, jdbcType=JdbcType.VARCHAR)
    })
    IcSmsMeeting selectByPrimaryKey(String gid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_meeting
     *
     * @mbg.generated
     */
    @UpdateProvider(type=IcSmsMeetingSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") IcSmsMeeting record, @Param("example") IcSmsMeetingExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_meeting
     *
     * @mbg.generated
     */
    @UpdateProvider(type=IcSmsMeetingSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") IcSmsMeeting record, @Param("example") IcSmsMeetingExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_meeting
     *
     * @mbg.generated
     */
    @UpdateProvider(type=IcSmsMeetingSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(IcSmsMeeting record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_meeting
     *
     * @mbg.generated
     */
    @Update({
        "update ic_sms_meeting",
        "set year = #{year,jdbcType=VARCHAR},",
          "meeting_time = #{meetingTime,jdbcType=VARCHAR},",
          "provience = #{provience,jdbcType=VARCHAR},",
          "city = #{city,jdbcType=VARCHAR},",
          "theme = #{theme,jdbcType=VARCHAR},",
          "c_user = #{cUser,jdbcType=VARCHAR},",
          "hl_user = #{hlUser,jdbcType=VARCHAR},",
          "objective = #{objective,jdbcType=VARCHAR},",
          "remark = #{remark,jdbcType=VARCHAR}",
        "where gid = #{gid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(IcSmsMeeting record);
}