package com.iconfluence.sms.mapper;

import com.iconfluence.sms.model.IcSmsAuthority;
import com.iconfluence.sms.model.IcSmsAuthorityExample;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface IcSmsAuthorityMapper extends BaseMapper<IcSmsAuthority, IcSmsAuthorityExample> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_authority
     *
     * @mbg.generated
     */
    @SelectProvider(type=IcSmsAuthoritySqlProvider.class, method="countByExample")
    long countByExample(IcSmsAuthorityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_authority
     *
     * @mbg.generated
     */
    @DeleteProvider(type=IcSmsAuthoritySqlProvider.class, method="deleteByExample")
    int deleteByExample(IcSmsAuthorityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_authority
     *
     * @mbg.generated
     */
    @Delete({
        "delete from ic_sms_authority",
        "where gid = #{gid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String gid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_authority
     *
     * @mbg.generated
     */
    @Insert({
        "insert into ic_sms_authority (gid, name, ",
        "keyword, machine, ",
        "roles, state)",
        "values (#{gid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, ",
        "#{keyword,jdbcType=VARCHAR}, #{machine,jdbcType=VARCHAR}, ",
        "#{roles,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR})"
    })
    int insert(IcSmsAuthority record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_authority
     *
     * @mbg.generated
     */
    @InsertProvider(type=IcSmsAuthoritySqlProvider.class, method="insertSelective")
    int insertSelective(IcSmsAuthority record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_authority
     *
     * @mbg.generated
     */
    @SelectProvider(type=IcSmsAuthoritySqlProvider.class, method="selectByExample")
    @ConstructorArgs({
        @Arg(column="gid", javaType=String.class, jdbcType=JdbcType.VARCHAR, id=true),
        @Arg(column="name", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="keyword", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="machine", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="roles", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="state", javaType=String.class, jdbcType=JdbcType.VARCHAR)
    })
    List<IcSmsAuthority> selectByExample(IcSmsAuthorityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_authority
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "gid, name, keyword, machine, roles, state",
        "from ic_sms_authority",
        "where gid = #{gid,jdbcType=VARCHAR}"
    })
    @ConstructorArgs({
        @Arg(column="gid", javaType=String.class, jdbcType=JdbcType.VARCHAR, id=true),
        @Arg(column="name", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="keyword", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="machine", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="roles", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="state", javaType=String.class, jdbcType=JdbcType.VARCHAR)
    })
    IcSmsAuthority selectByPrimaryKey(String gid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_authority
     *
     * @mbg.generated
     */
    @UpdateProvider(type=IcSmsAuthoritySqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") IcSmsAuthority record, @Param("example") IcSmsAuthorityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_authority
     *
     * @mbg.generated
     */
    @UpdateProvider(type=IcSmsAuthoritySqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") IcSmsAuthority record, @Param("example") IcSmsAuthorityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_authority
     *
     * @mbg.generated
     */
    @UpdateProvider(type=IcSmsAuthoritySqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(IcSmsAuthority record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ic_sms_authority
     *
     * @mbg.generated
     */
    @Update({
        "update ic_sms_authority",
        "set name = #{name,jdbcType=VARCHAR},",
          "keyword = #{keyword,jdbcType=VARCHAR},",
          "machine = #{machine,jdbcType=VARCHAR},",
          "roles = #{roles,jdbcType=VARCHAR},",
          "state = #{state,jdbcType=VARCHAR}",
        "where gid = #{gid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(IcSmsAuthority record);
}